todolist 冲刺阶段：

APP：
	1.及时复习策略：在单词本和用户刚学习的单词之间进行调度。
	2.单词本学习完成后的逻辑。
	3.控制用户学习上限：
		3.1控制节点在哪里？反馈并进入下一个单词时进行判断，但不能阻碍了复习流程。
		3.2用户实体里需要加一个“已经学习的单词”，用来判断学习上限是否还有效。做成一个大string，在Controller里再转成set使用。有点小麻烦但避免了数据库里的牵连。 OK
		3.3和server同步：类似登陆流程。在判断出用户的上限用完之后要主动和server同步一下进行确认。或提示用户到设置里去刷新一下。后者吧，简单可靠。
APPbug：
	1.图片选择助记时，第一次需要拉上去。 OK
	2.进入了下一个单词后，图片选择框里没有及时更换图片！
	3.需要实现一个点击图片－》展开的逻辑，需要绘图计算坐标。
	4.mp3列表有时因为网络不给力出现刷不出数据！
	5.文字助记选择时，tbl的懒加载好像有问题！要人工点一下才加载。
各个label的字体需要调整，美观一些；图片助记的初始图片要换。并且不要拉伸。

Server：
	1.用户上传的点击行为参与到排序中。文字助记的排序可以直接加权，但图片用户的助记，初始的权重为bing的排序（200以降），用户的点击权重乘上一个序数？暂时使用系数1吧。
	2.用户复习单词列表的计算，并推送给用户：
		2.1推送流程要走ios的推送服务，比较麻烦！考虑在第一版放在APP里面做？第二版要在Server里实现并推送给用户！
	3.云资源的消耗查询、调度。优先级降低。
	4.接口：增加一个与APP同步用户的信息（帐户、已学习单词打字符窜［20000个单词的长度］）

交易：
	1.官网。静态展示功能、介绍。淘宝购买链接。
	2.交易完成：第一版仅支持淘宝购买，用户拍下后按照格式留言自己的学号。我们2个工作日内响应。

数据安全：
	1.用户数据加密。这个必须！因为部署在朋友de机器上。
	2.数据备份。这个小时级别地冗余dump？要简单。


