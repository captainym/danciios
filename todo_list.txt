APP：
     1.及时复习策略：在单词本和用户刚学习的单词之间进行调度(5+-2策略) OK
     2.单词本学习完成后的逻辑 OK
     3.控制用户学习上限：OK
          3.1控制节点在哪里？反馈并进入下一个单词时进行判断，但不能阻碍了复习流程。OK
          3.2用户实体里需要加一个“已经学习的单词”，用来判断学习上限是否还有效。做成一个大string，在Controller里再转成set使用。有点小麻烦但避免了数据库里的牵连。 OK
          3.3和server同步：类似登陆流程。在判断出用户的上限用完之后要主动和server同步一下进行确认。或提示用户到设置里去刷新一下。后者吧，简单可靠。
     4. 设置界面
           4.1 用户信息页面: 
               (1) 支持删除用户(用户注销)
               (2) label改为table
           4.2 帮助页面
               (1) App介绍, 团队简介, 官网地址. 分三个段落显示. 
    5. 抗遗忘算法

APPbug：OK
     1.图片选择助记时，第一次需要拉上去。 OK
     2.进入了下一个单词后，图片选择框里没有及时更换图片！ OK
     3.需要实现一个点击图片－》展开的逻辑，需要绘图计算坐标。 OK
     4.mp3列表有时因为网络不给力出现刷不出数据！
     5.文字助记选择时，tbl的懒加载好像有问题！要人工点一下才加载。
各个label的字体需要调整，美观一些；图片助记的初始图片要换。并且不要拉伸。 OK

Server：
     1.用户上传的点击行为参与到排序中。文字助记的排序可以直接加权，但图片用户的助记，初始的权重为bing的排序（200以降），用户的点击权重乘上一个序数？暂时使用系数1吧。
     2.用户复习单词列表的计算，并推送给用户：
          2.1推送流程要走ios的推送服务，比较麻烦！考虑在第一版放在APP里面做？第二版要在Server里实现并推送给用户！---app内部
     3.云资源的消耗查询、调度。优先级降低。------------

  1. server
  2. 
    1. 程序
    2. 
      1. 采取单前端服务器负责返回单词查询接口,bae的多台服务器提供mp3和助记图片下载的接口架构
      2. 
        1. bae服务的实现，上线mp3和助记图片的下载接口即可
        2. server前端负责维护一个bae列表和百度云存储的列表，定期更新bae和云存储的状态，包括流入流量，流出流量，cpu时间等有免费限额的指标（一个bcs只有5G的免费空间，需要有个partition的概念来把所有的图片和语音数据分组，目前非高清图片有20G，高清的估计得有80G，需要通过单词的id来hash，均分到各个partition。）
        3. 
          1. 实现一个redis的cache manager，缓存所有的单词信息，例句信息，账户分组信息，账户信息，助记信息，基本上所有的数据库信息都缓存在redis里。
          2. 
            1. php端的接口，提供账户查询，单词信息查询等各种接口，先从redis能从redis取，如果失败，就从数据库读取
            2. 后台脚本，提供清空redis，load redis的功能
          3. partition，百度账户，bae，以及bcs的增删改查，一个单词如何找到mp3和图片所在的账户列表，bae列表，bcs列表
          4. 
            1. 增删改暂时都直接操作数据库
            2. 提供查询接口
            3. 一个单词查询进来后，找到所有的bae账户和bcs列表，round robin的方式轮询，一个分组下的bcs内容均是一样啊，是冗余
          5. 提供数据上传的接口，一个单词需要上传到指定的几个bcs上，即需要发送到某个partition下的一组bcs
        4. 前端提供单词信息查询，用户信息查询接口-
        5. 所有的bae自动化升级和部署------优先级低
      3. 遗忘模型-----2期
    3. 存储
    4. 
      1. image和mp3都放到百度云存储上
  3. 接口(所有的接口返回json数据，类似{‘status’:0, 'msg':'test', 'data':data}), status表示执行状态，0表示成功，1失败，msg表示失败描述，data是查询的结果，一般是个数组
  4. 
    1. 查询类接口
    2. 
      1. 查询单词信息的接口，返回单词的助记图片下载地址，例句以及例句mp3的下载地址，默认例句返回前10条，助记图片返回前10条
      2. 
        1. 地址：/bdc/query/word,
        2. 类型是get
        3. 输入参数类似{name:'psychology'}
      3. 查询单词更多图片的地址，比如接下来的10条助记图片
      4. 
        1. 地址 /dc/query/tips
        2. 方法是get
        3. 参数{‘type’:'img', 'start':0, 'count':10, }
      5. 查询更多例句的接口地址，查询接下来的10条例句
      6. 
        1. 地址：/bdc/query/sentence
        2. 方法是get
        3. 参数{'word':'psychology', 'start':0, 'count':10}
      7. 查询更多文字助记
      8. 
        1. 地址 /dc/query/tips
        2. 方法是get
        3. 参数{‘type’:'txt', 'start':0, 'count':10, 'word':'psychology'}
      9. mp3和助记图片的下载接口
      10. 
        1. 地址后缀是/bdc/cloud/file，主机名称应该是bae的域名， 
        2. 方法是get
        3. 参数是{'file_path':'云储存的路径', 'file_type:''jpeg(或者mp3)'}
        4. 返回是二进制的数据流
    3. 上传类接口
    4. 
      1. 用户上传文字助记的接口
      2. 用户选择图片助记的接口
      3. 
        1. 默认图片的rank是搜索引擎，从200递减，
        2. 用户记录选择次数
        3. 默认的rank+选择次数*5
      4. 用户账户同步接口（输入是已用信息，用户的学号，学习过的列表，返回学习上限信息）
      5. 用户单词状态上传接口(记住，模糊等)
      6. 
        1. 地址是/bdc/action/op
        2. 方法是post
        3. 参数是{'otype':'1', 'ovalue':'', 'opt_time':'xxxxx', 'username':'xxx', 'word':'xxx'} 
    5. 用户或者支付类接口
    6. 
      1. 用户注册接口
      2. 
        1. 地址是/bdc/action/register,
        2. 方法是post
        3. 参数类似{'username'=>'test', 'passwd'=>'test123', 'email'=>'xx', 'imei':'xx' , 'sid':'xxx'}
      3. 用户登陆接口
      4. 
        1. 地址是/bdc/action/auth,
        2. 方法是post
        3. 参数类似{'username'=>'test', 'passwd'=>'test123'}
      5. 支付接口？？----不做
    7. 监控
    8. 
      1. 云资源的消耗查询、调度。优先级降低。-上线后慢慢做-----初期做调用次数（优先级低）文件大小+调用次数来估算流量

  5. 数据
  6. 
    1. 基础数据一次性导入
    2. 
      1. 单词
      2. 例句和语音mp3信息-----(上传mp3 ，10条,)
      3. 助记图片---------------------(50个，数据上传）
      4. 文字助记 OK
      5. 词根收录 OK
      6. 单词本收录 OK
    3. 数据的自动更新流程打通
    4. 
      1. 例句和语音mp3信息---这个应该不需要定期更新
      2. 助记图片----------
      3. 文字助记----------
  7. 交易：
     1.官网。静态展示功能、介绍。淘宝购买链接----------（明天搞定）
     2.交易完成：第一版仅支持淘宝购买，用户拍下后按照格式留言自己的学号。我们1个工作日内响应

数据安全：
     1.用户数据加密。这个必须！因为部署在朋友de机器上。----用户名和密码加密
     2.数据备份。这个小时级别地冗余dump？要简单。

  8. 
    1. 接口加密----token
